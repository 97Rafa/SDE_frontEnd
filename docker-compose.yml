services:
  fastapi:
    build: .
    ports:
      - "4000:4000"
    environment:
      - KAFKA_BROKER=kafka:9093
    volumes:
      - .:/app

    
  zookeeper:
    image: bitnami/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

 
  kafka:
      image: bitnami/kafka:3.5
      ports:
        - "9092:9092"
      expose:
        - "9093"
      environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - zookeeper
        
  topic-init:
    image: bitnami/kafka:3.5
    container_name: topic-init
    depends_on:
      - kafka
    volumes:
      - ./create_topics.sh:/create_topics.sh
    entrypoint: ["bash", "-c", "sh create_topics.sh"]


  kafbat-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    container_name: kafbat-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9093"
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: "PLAINTEXT"
    depends_on:
      - kafka
